use ::libc;
#[c2rust::header_src = "/home/dcnick3/Downloads/opus-1.3.1/celt/arch.h:35"]
pub mod arch_h {
    #[c2rust::src_loc = "180:1"]
    pub type opus_val32 = libc::c_float;
    extern "C" {
        #[c2rust::src_loc = "63:1"]
        pub fn celt_fatal(
            str: *const libc::c_char,
            file: *const libc::c_char,
            line: libc::c_int,
        ) -> !;
    }
}
#[c2rust::header_src = "/home/dcnick3/Downloads/opus-1.3.1/celt/entcode.h:35"]
pub mod entcode_h {
    #[c2rust::src_loc = "45:1"]
    pub type ec_window = u32;
    #[derive(Copy, Clone)]
    #[repr(C)]
    #[c2rust::src_loc = "62:8"]
    pub struct ec_ctx {
        pub buf: *mut libc::c_uchar,
        pub storage: u32,
        pub end_offs: u32,
        pub end_window: ec_window,
        pub nend_bits: libc::c_int,
        pub nbits_total: libc::c_int,
        pub offs: u32,
        pub rng: u32,
        pub val: u32,
        pub ext: u32,
        pub rem: libc::c_int,
        pub error: libc::c_int,
    }
    #[c2rust::src_loc = "47:1"]
    pub type ec_enc = ec_ctx;
    #[c2rust::src_loc = "48:1"]
    pub type ec_dec = ec_ctx;
}
#[c2rust::header_src = "/usr/include/stdlib.h:34"]
pub mod stdlib_h {
    extern "C" {
        #[c2rust::src_loc = "861:12"]
        pub fn abs(_: libc::c_int) -> libc::c_int;
    }
}
#[c2rust::header_src = "/home/dcnick3/Downloads/opus-1.3.1/celt/entenc.h:35"]
pub mod entenc_h {
    use super::entcode_h::ec_enc;
    extern "C" {
        #[c2rust::src_loc = "71:1"]
        pub fn ec_enc_uint(_this: *mut ec_enc, _fl: u32, _ft: u32);
    }
}
#[c2rust::header_src = "/home/dcnick3/Downloads/opus-1.3.1/celt/entdec.h:35"]
pub mod entdec_h {
    use super::entcode_h::ec_dec;
    extern "C" {
        #[c2rust::src_loc = "90:1"]
        pub fn ec_dec_uint(_this: *mut ec_dec, _ft: u32) -> u32;
    }
}
pub use self::arch_h::{celt_fatal, opus_val32};
pub use self::entcode_h::{ec_ctx, ec_dec, ec_enc, ec_window};
use self::entdec_h::ec_dec_uint;
use self::entenc_h::ec_enc_uint;

use self::stdlib_h::abs;

#[c2rust::src_loc = "213:26"]
static mut CELT_PVQ_U_DATA: [u32; 1272] = [
    1 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    0 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    1 as libc::c_int as u32,
    3 as libc::c_int as u32,
    5 as libc::c_int as u32,
    7 as libc::c_int as u32,
    9 as libc::c_int as u32,
    11 as libc::c_int as u32,
    13 as libc::c_int as u32,
    15 as libc::c_int as u32,
    17 as libc::c_int as u32,
    19 as libc::c_int as u32,
    21 as libc::c_int as u32,
    23 as libc::c_int as u32,
    25 as libc::c_int as u32,
    27 as libc::c_int as u32,
    29 as libc::c_int as u32,
    31 as libc::c_int as u32,
    33 as libc::c_int as u32,
    35 as libc::c_int as u32,
    37 as libc::c_int as u32,
    39 as libc::c_int as u32,
    41 as libc::c_int as u32,
    43 as libc::c_int as u32,
    45 as libc::c_int as u32,
    47 as libc::c_int as u32,
    49 as libc::c_int as u32,
    51 as libc::c_int as u32,
    53 as libc::c_int as u32,
    55 as libc::c_int as u32,
    57 as libc::c_int as u32,
    59 as libc::c_int as u32,
    61 as libc::c_int as u32,
    63 as libc::c_int as u32,
    65 as libc::c_int as u32,
    67 as libc::c_int as u32,
    69 as libc::c_int as u32,
    71 as libc::c_int as u32,
    73 as libc::c_int as u32,
    75 as libc::c_int as u32,
    77 as libc::c_int as u32,
    79 as libc::c_int as u32,
    81 as libc::c_int as u32,
    83 as libc::c_int as u32,
    85 as libc::c_int as u32,
    87 as libc::c_int as u32,
    89 as libc::c_int as u32,
    91 as libc::c_int as u32,
    93 as libc::c_int as u32,
    95 as libc::c_int as u32,
    97 as libc::c_int as u32,
    99 as libc::c_int as u32,
    101 as libc::c_int as u32,
    103 as libc::c_int as u32,
    105 as libc::c_int as u32,
    107 as libc::c_int as u32,
    109 as libc::c_int as u32,
    111 as libc::c_int as u32,
    113 as libc::c_int as u32,
    115 as libc::c_int as u32,
    117 as libc::c_int as u32,
    119 as libc::c_int as u32,
    121 as libc::c_int as u32,
    123 as libc::c_int as u32,
    125 as libc::c_int as u32,
    127 as libc::c_int as u32,
    129 as libc::c_int as u32,
    131 as libc::c_int as u32,
    133 as libc::c_int as u32,
    135 as libc::c_int as u32,
    137 as libc::c_int as u32,
    139 as libc::c_int as u32,
    141 as libc::c_int as u32,
    143 as libc::c_int as u32,
    145 as libc::c_int as u32,
    147 as libc::c_int as u32,
    149 as libc::c_int as u32,
    151 as libc::c_int as u32,
    153 as libc::c_int as u32,
    155 as libc::c_int as u32,
    157 as libc::c_int as u32,
    159 as libc::c_int as u32,
    161 as libc::c_int as u32,
    163 as libc::c_int as u32,
    165 as libc::c_int as u32,
    167 as libc::c_int as u32,
    169 as libc::c_int as u32,
    171 as libc::c_int as u32,
    173 as libc::c_int as u32,
    175 as libc::c_int as u32,
    177 as libc::c_int as u32,
    179 as libc::c_int as u32,
    181 as libc::c_int as u32,
    183 as libc::c_int as u32,
    185 as libc::c_int as u32,
    187 as libc::c_int as u32,
    189 as libc::c_int as u32,
    191 as libc::c_int as u32,
    193 as libc::c_int as u32,
    195 as libc::c_int as u32,
    197 as libc::c_int as u32,
    199 as libc::c_int as u32,
    201 as libc::c_int as u32,
    203 as libc::c_int as u32,
    205 as libc::c_int as u32,
    207 as libc::c_int as u32,
    209 as libc::c_int as u32,
    211 as libc::c_int as u32,
    213 as libc::c_int as u32,
    215 as libc::c_int as u32,
    217 as libc::c_int as u32,
    219 as libc::c_int as u32,
    221 as libc::c_int as u32,
    223 as libc::c_int as u32,
    225 as libc::c_int as u32,
    227 as libc::c_int as u32,
    229 as libc::c_int as u32,
    231 as libc::c_int as u32,
    233 as libc::c_int as u32,
    235 as libc::c_int as u32,
    237 as libc::c_int as u32,
    239 as libc::c_int as u32,
    241 as libc::c_int as u32,
    243 as libc::c_int as u32,
    245 as libc::c_int as u32,
    247 as libc::c_int as u32,
    249 as libc::c_int as u32,
    251 as libc::c_int as u32,
    253 as libc::c_int as u32,
    255 as libc::c_int as u32,
    257 as libc::c_int as u32,
    259 as libc::c_int as u32,
    261 as libc::c_int as u32,
    263 as libc::c_int as u32,
    265 as libc::c_int as u32,
    267 as libc::c_int as u32,
    269 as libc::c_int as u32,
    271 as libc::c_int as u32,
    273 as libc::c_int as u32,
    275 as libc::c_int as u32,
    277 as libc::c_int as u32,
    279 as libc::c_int as u32,
    281 as libc::c_int as u32,
    283 as libc::c_int as u32,
    285 as libc::c_int as u32,
    287 as libc::c_int as u32,
    289 as libc::c_int as u32,
    291 as libc::c_int as u32,
    293 as libc::c_int as u32,
    295 as libc::c_int as u32,
    297 as libc::c_int as u32,
    299 as libc::c_int as u32,
    301 as libc::c_int as u32,
    303 as libc::c_int as u32,
    305 as libc::c_int as u32,
    307 as libc::c_int as u32,
    309 as libc::c_int as u32,
    311 as libc::c_int as u32,
    313 as libc::c_int as u32,
    315 as libc::c_int as u32,
    317 as libc::c_int as u32,
    319 as libc::c_int as u32,
    321 as libc::c_int as u32,
    323 as libc::c_int as u32,
    325 as libc::c_int as u32,
    327 as libc::c_int as u32,
    329 as libc::c_int as u32,
    331 as libc::c_int as u32,
    333 as libc::c_int as u32,
    335 as libc::c_int as u32,
    337 as libc::c_int as u32,
    339 as libc::c_int as u32,
    341 as libc::c_int as u32,
    343 as libc::c_int as u32,
    345 as libc::c_int as u32,
    347 as libc::c_int as u32,
    349 as libc::c_int as u32,
    351 as libc::c_int as u32,
    13 as libc::c_int as u32,
    25 as libc::c_int as u32,
    41 as libc::c_int as u32,
    61 as libc::c_int as u32,
    85 as libc::c_int as u32,
    113 as libc::c_int as u32,
    145 as libc::c_int as u32,
    181 as libc::c_int as u32,
    221 as libc::c_int as u32,
    265 as libc::c_int as u32,
    313 as libc::c_int as u32,
    365 as libc::c_int as u32,
    421 as libc::c_int as u32,
    481 as libc::c_int as u32,
    545 as libc::c_int as u32,
    613 as libc::c_int as u32,
    685 as libc::c_int as u32,
    761 as libc::c_int as u32,
    841 as libc::c_int as u32,
    925 as libc::c_int as u32,
    1013 as libc::c_int as u32,
    1105 as libc::c_int as u32,
    1201 as libc::c_int as u32,
    1301 as libc::c_int as u32,
    1405 as libc::c_int as u32,
    1513 as libc::c_int as u32,
    1625 as libc::c_int as u32,
    1741 as libc::c_int as u32,
    1861 as libc::c_int as u32,
    1985 as libc::c_int as u32,
    2113 as libc::c_int as u32,
    2245 as libc::c_int as u32,
    2381 as libc::c_int as u32,
    2521 as libc::c_int as u32,
    2665 as libc::c_int as u32,
    2813 as libc::c_int as u32,
    2965 as libc::c_int as u32,
    3121 as libc::c_int as u32,
    3281 as libc::c_int as u32,
    3445 as libc::c_int as u32,
    3613 as libc::c_int as u32,
    3785 as libc::c_int as u32,
    3961 as libc::c_int as u32,
    4141 as libc::c_int as u32,
    4325 as libc::c_int as u32,
    4513 as libc::c_int as u32,
    4705 as libc::c_int as u32,
    4901 as libc::c_int as u32,
    5101 as libc::c_int as u32,
    5305 as libc::c_int as u32,
    5513 as libc::c_int as u32,
    5725 as libc::c_int as u32,
    5941 as libc::c_int as u32,
    6161 as libc::c_int as u32,
    6385 as libc::c_int as u32,
    6613 as libc::c_int as u32,
    6845 as libc::c_int as u32,
    7081 as libc::c_int as u32,
    7321 as libc::c_int as u32,
    7565 as libc::c_int as u32,
    7813 as libc::c_int as u32,
    8065 as libc::c_int as u32,
    8321 as libc::c_int as u32,
    8581 as libc::c_int as u32,
    8845 as libc::c_int as u32,
    9113 as libc::c_int as u32,
    9385 as libc::c_int as u32,
    9661 as libc::c_int as u32,
    9941 as libc::c_int as u32,
    10225 as libc::c_int as u32,
    10513 as libc::c_int as u32,
    10805 as libc::c_int as u32,
    11101 as libc::c_int as u32,
    11401 as libc::c_int as u32,
    11705 as libc::c_int as u32,
    12013 as libc::c_int as u32,
    12325 as libc::c_int as u32,
    12641 as libc::c_int as u32,
    12961 as libc::c_int as u32,
    13285 as libc::c_int as u32,
    13613 as libc::c_int as u32,
    13945 as libc::c_int as u32,
    14281 as libc::c_int as u32,
    14621 as libc::c_int as u32,
    14965 as libc::c_int as u32,
    15313 as libc::c_int as u32,
    15665 as libc::c_int as u32,
    16021 as libc::c_int as u32,
    16381 as libc::c_int as u32,
    16745 as libc::c_int as u32,
    17113 as libc::c_int as u32,
    17485 as libc::c_int as u32,
    17861 as libc::c_int as u32,
    18241 as libc::c_int as u32,
    18625 as libc::c_int as u32,
    19013 as libc::c_int as u32,
    19405 as libc::c_int as u32,
    19801 as libc::c_int as u32,
    20201 as libc::c_int as u32,
    20605 as libc::c_int as u32,
    21013 as libc::c_int as u32,
    21425 as libc::c_int as u32,
    21841 as libc::c_int as u32,
    22261 as libc::c_int as u32,
    22685 as libc::c_int as u32,
    23113 as libc::c_int as u32,
    23545 as libc::c_int as u32,
    23981 as libc::c_int as u32,
    24421 as libc::c_int as u32,
    24865 as libc::c_int as u32,
    25313 as libc::c_int as u32,
    25765 as libc::c_int as u32,
    26221 as libc::c_int as u32,
    26681 as libc::c_int as u32,
    27145 as libc::c_int as u32,
    27613 as libc::c_int as u32,
    28085 as libc::c_int as u32,
    28561 as libc::c_int as u32,
    29041 as libc::c_int as u32,
    29525 as libc::c_int as u32,
    30013 as libc::c_int as u32,
    30505 as libc::c_int as u32,
    31001 as libc::c_int as u32,
    31501 as libc::c_int as u32,
    32005 as libc::c_int as u32,
    32513 as libc::c_int as u32,
    33025 as libc::c_int as u32,
    33541 as libc::c_int as u32,
    34061 as libc::c_int as u32,
    34585 as libc::c_int as u32,
    35113 as libc::c_int as u32,
    35645 as libc::c_int as u32,
    36181 as libc::c_int as u32,
    36721 as libc::c_int as u32,
    37265 as libc::c_int as u32,
    37813 as libc::c_int as u32,
    38365 as libc::c_int as u32,
    38921 as libc::c_int as u32,
    39481 as libc::c_int as u32,
    40045 as libc::c_int as u32,
    40613 as libc::c_int as u32,
    41185 as libc::c_int as u32,
    41761 as libc::c_int as u32,
    42341 as libc::c_int as u32,
    42925 as libc::c_int as u32,
    43513 as libc::c_int as u32,
    44105 as libc::c_int as u32,
    44701 as libc::c_int as u32,
    45301 as libc::c_int as u32,
    45905 as libc::c_int as u32,
    46513 as libc::c_int as u32,
    47125 as libc::c_int as u32,
    47741 as libc::c_int as u32,
    48361 as libc::c_int as u32,
    48985 as libc::c_int as u32,
    49613 as libc::c_int as u32,
    50245 as libc::c_int as u32,
    50881 as libc::c_int as u32,
    51521 as libc::c_int as u32,
    52165 as libc::c_int as u32,
    52813 as libc::c_int as u32,
    53465 as libc::c_int as u32,
    54121 as libc::c_int as u32,
    54781 as libc::c_int as u32,
    55445 as libc::c_int as u32,
    56113 as libc::c_int as u32,
    56785 as libc::c_int as u32,
    57461 as libc::c_int as u32,
    58141 as libc::c_int as u32,
    58825 as libc::c_int as u32,
    59513 as libc::c_int as u32,
    60205 as libc::c_int as u32,
    60901 as libc::c_int as u32,
    61601 as libc::c_int as u32,
    63 as libc::c_int as u32,
    129 as libc::c_int as u32,
    231 as libc::c_int as u32,
    377 as libc::c_int as u32,
    575 as libc::c_int as u32,
    833 as libc::c_int as u32,
    1159 as libc::c_int as u32,
    1561 as libc::c_int as u32,
    2047 as libc::c_int as u32,
    2625 as libc::c_int as u32,
    3303 as libc::c_int as u32,
    4089 as libc::c_int as u32,
    4991 as libc::c_int as u32,
    6017 as libc::c_int as u32,
    7175 as libc::c_int as u32,
    8473 as libc::c_int as u32,
    9919 as libc::c_int as u32,
    11521 as libc::c_int as u32,
    13287 as libc::c_int as u32,
    15225 as libc::c_int as u32,
    17343 as libc::c_int as u32,
    19649 as libc::c_int as u32,
    22151 as libc::c_int as u32,
    24857 as libc::c_int as u32,
    27775 as libc::c_int as u32,
    30913 as libc::c_int as u32,
    34279 as libc::c_int as u32,
    37881 as libc::c_int as u32,
    41727 as libc::c_int as u32,
    45825 as libc::c_int as u32,
    50183 as libc::c_int as u32,
    54809 as libc::c_int as u32,
    59711 as libc::c_int as u32,
    64897 as libc::c_int as u32,
    70375 as libc::c_int as u32,
    76153 as libc::c_int as u32,
    82239 as libc::c_int as u32,
    88641 as libc::c_int as u32,
    95367 as libc::c_int as u32,
    102425 as libc::c_int as u32,
    109823 as libc::c_int as u32,
    117569 as libc::c_int as u32,
    125671 as libc::c_int as u32,
    134137 as libc::c_int as u32,
    142975 as libc::c_int as u32,
    152193 as libc::c_int as u32,
    161799 as libc::c_int as u32,
    171801 as libc::c_int as u32,
    182207 as libc::c_int as u32,
    193025 as libc::c_int as u32,
    204263 as libc::c_int as u32,
    215929 as libc::c_int as u32,
    228031 as libc::c_int as u32,
    240577 as libc::c_int as u32,
    253575 as libc::c_int as u32,
    267033 as libc::c_int as u32,
    280959 as libc::c_int as u32,
    295361 as libc::c_int as u32,
    310247 as libc::c_int as u32,
    325625 as libc::c_int as u32,
    341503 as libc::c_int as u32,
    357889 as libc::c_int as u32,
    374791 as libc::c_int as u32,
    392217 as libc::c_int as u32,
    410175 as libc::c_int as u32,
    428673 as libc::c_int as u32,
    447719 as libc::c_int as u32,
    467321 as libc::c_int as u32,
    487487 as libc::c_int as u32,
    508225 as libc::c_int as u32,
    529543 as libc::c_int as u32,
    551449 as libc::c_int as u32,
    573951 as libc::c_int as u32,
    597057 as libc::c_int as u32,
    620775 as libc::c_int as u32,
    645113 as libc::c_int as u32,
    670079 as libc::c_int as u32,
    695681 as libc::c_int as u32,
    721927 as libc::c_int as u32,
    748825 as libc::c_int as u32,
    776383 as libc::c_int as u32,
    804609 as libc::c_int as u32,
    833511 as libc::c_int as u32,
    863097 as libc::c_int as u32,
    893375 as libc::c_int as u32,
    924353 as libc::c_int as u32,
    956039 as libc::c_int as u32,
    988441 as libc::c_int as u32,
    1021567 as libc::c_int as u32,
    1055425 as libc::c_int as u32,
    1090023 as libc::c_int as u32,
    1125369 as libc::c_int as u32,
    1161471 as libc::c_int as u32,
    1198337 as libc::c_int as u32,
    1235975 as libc::c_int as u32,
    1274393 as libc::c_int as u32,
    1313599 as libc::c_int as u32,
    1353601 as libc::c_int as u32,
    1394407 as libc::c_int as u32,
    1436025 as libc::c_int as u32,
    1478463 as libc::c_int as u32,
    1521729 as libc::c_int as u32,
    1565831 as libc::c_int as u32,
    1610777 as libc::c_int as u32,
    1656575 as libc::c_int as u32,
    1703233 as libc::c_int as u32,
    1750759 as libc::c_int as u32,
    1799161 as libc::c_int as u32,
    1848447 as libc::c_int as u32,
    1898625 as libc::c_int as u32,
    1949703 as libc::c_int as u32,
    2001689 as libc::c_int as u32,
    2054591 as libc::c_int as u32,
    2108417 as libc::c_int as u32,
    2163175 as libc::c_int as u32,
    2218873 as libc::c_int as u32,
    2275519 as libc::c_int as u32,
    2333121 as libc::c_int as u32,
    2391687 as libc::c_int as u32,
    2451225 as libc::c_int as u32,
    2511743 as libc::c_int as u32,
    2573249 as libc::c_int as u32,
    2635751 as libc::c_int as u32,
    2699257 as libc::c_int as u32,
    2763775 as libc::c_int as u32,
    2829313 as libc::c_int as u32,
    2895879 as libc::c_int as u32,
    2963481 as libc::c_int as u32,
    3032127 as libc::c_int as u32,
    3101825 as libc::c_int as u32,
    3172583 as libc::c_int as u32,
    3244409 as libc::c_int as u32,
    3317311 as libc::c_int as u32,
    3391297 as libc::c_int as u32,
    3466375 as libc::c_int as u32,
    3542553 as libc::c_int as u32,
    3619839 as libc::c_int as u32,
    3698241 as libc::c_int as u32,
    3777767 as libc::c_int as u32,
    3858425 as libc::c_int as u32,
    3940223 as libc::c_int as u32,
    4023169 as libc::c_int as u32,
    4107271 as libc::c_int as u32,
    4192537 as libc::c_int as u32,
    4278975 as libc::c_int as u32,
    4366593 as libc::c_int as u32,
    4455399 as libc::c_int as u32,
    4545401 as libc::c_int as u32,
    4636607 as libc::c_int as u32,
    4729025 as libc::c_int as u32,
    4822663 as libc::c_int as u32,
    4917529 as libc::c_int as u32,
    5013631 as libc::c_int as u32,
    5110977 as libc::c_int as u32,
    5209575 as libc::c_int as u32,
    5309433 as libc::c_int as u32,
    5410559 as libc::c_int as u32,
    5512961 as libc::c_int as u32,
    5616647 as libc::c_int as u32,
    5721625 as libc::c_int as u32,
    5827903 as libc::c_int as u32,
    5935489 as libc::c_int as u32,
    6044391 as libc::c_int as u32,
    6154617 as libc::c_int as u32,
    6266175 as libc::c_int as u32,
    6379073 as libc::c_int as u32,
    6493319 as libc::c_int as u32,
    6608921 as libc::c_int as u32,
    6725887 as libc::c_int as u32,
    6844225 as libc::c_int as u32,
    6963943 as libc::c_int as u32,
    7085049 as libc::c_int as u32,
    7207551 as libc::c_int as u32,
    321 as libc::c_int as u32,
    681 as libc::c_int as u32,
    1289 as libc::c_int as u32,
    2241 as libc::c_int as u32,
    3649 as libc::c_int as u32,
    5641 as libc::c_int as u32,
    8361 as libc::c_int as u32,
    11969 as libc::c_int as u32,
    16641 as libc::c_int as u32,
    22569 as libc::c_int as u32,
    29961 as libc::c_int as u32,
    39041 as libc::c_int as u32,
    50049 as libc::c_int as u32,
    63241 as libc::c_int as u32,
    78889 as libc::c_int as u32,
    97281 as libc::c_int as u32,
    118721 as libc::c_int as u32,
    143529 as libc::c_int as u32,
    172041 as libc::c_int as u32,
    204609 as libc::c_int as u32,
    241601 as libc::c_int as u32,
    283401 as libc::c_int as u32,
    330409 as libc::c_int as u32,
    383041 as libc::c_int as u32,
    441729 as libc::c_int as u32,
    506921 as libc::c_int as u32,
    579081 as libc::c_int as u32,
    658689 as libc::c_int as u32,
    746241 as libc::c_int as u32,
    842249 as libc::c_int as u32,
    947241 as libc::c_int as u32,
    1061761 as libc::c_int as u32,
    1186369 as libc::c_int as u32,
    1321641 as libc::c_int as u32,
    1468169 as libc::c_int as u32,
    1626561 as libc::c_int as u32,
    1797441 as libc::c_int as u32,
    1981449 as libc::c_int as u32,
    2179241 as libc::c_int as u32,
    2391489 as libc::c_int as u32,
    2618881 as libc::c_int as u32,
    2862121 as libc::c_int as u32,
    3121929 as libc::c_int as u32,
    3399041 as libc::c_int as u32,
    3694209 as libc::c_int as u32,
    4008201 as libc::c_int as u32,
    4341801 as libc::c_int as u32,
    4695809 as libc::c_int as u32,
    5071041 as libc::c_int as u32,
    5468329 as libc::c_int as u32,
    5888521 as libc::c_int as u32,
    6332481 as libc::c_int as u32,
    6801089 as libc::c_int as u32,
    7295241 as libc::c_int as u32,
    7815849 as libc::c_int as u32,
    8363841 as libc::c_int as u32,
    8940161 as libc::c_int as u32,
    9545769 as libc::c_int as u32,
    10181641 as libc::c_int as u32,
    10848769 as libc::c_int as u32,
    11548161 as libc::c_int as u32,
    12280841 as libc::c_int as u32,
    13047849 as libc::c_int as u32,
    13850241 as libc::c_int as u32,
    14689089 as libc::c_int as u32,
    15565481 as libc::c_int as u32,
    16480521 as libc::c_int as u32,
    17435329 as libc::c_int as u32,
    18431041 as libc::c_int as u32,
    19468809 as libc::c_int as u32,
    20549801 as libc::c_int as u32,
    21675201 as libc::c_int as u32,
    22846209 as libc::c_int as u32,
    24064041 as libc::c_int as u32,
    25329929 as libc::c_int as u32,
    26645121 as libc::c_int as u32,
    28010881 as libc::c_int as u32,
    29428489 as libc::c_int as u32,
    30899241 as libc::c_int as u32,
    32424449 as libc::c_int as u32,
    34005441 as libc::c_int as u32,
    35643561 as libc::c_int as u32,
    37340169 as libc::c_int as u32,
    39096641 as libc::c_int as u32,
    40914369 as libc::c_int as u32,
    42794761 as libc::c_int as u32,
    44739241 as libc::c_int as u32,
    46749249 as libc::c_int as u32,
    48826241 as libc::c_int as u32,
    50971689 as libc::c_int as u32,
    53187081 as libc::c_int as u32,
    55473921 as libc::c_int as u32,
    57833729 as libc::c_int as u32,
    60268041 as libc::c_int as u32,
    62778409 as libc::c_int as u32,
    65366401 as libc::c_int as u32,
    68033601 as libc::c_int as u32,
    70781609 as libc::c_int as u32,
    73612041 as libc::c_int as u32,
    76526529 as libc::c_int as u32,
    79526721 as libc::c_int as u32,
    82614281 as libc::c_int as u32,
    85790889 as libc::c_int as u32,
    89058241 as libc::c_int as u32,
    92418049 as libc::c_int as u32,
    95872041 as libc::c_int as u32,
    99421961 as libc::c_int as u32,
    103069569 as libc::c_int as u32,
    106816641 as libc::c_int as u32,
    110664969 as libc::c_int as u32,
    114616361 as libc::c_int as u32,
    118672641 as libc::c_int as u32,
    122835649 as libc::c_int as u32,
    127107241 as libc::c_int as u32,
    131489289 as libc::c_int as u32,
    135983681 as libc::c_int as u32,
    140592321 as libc::c_int as u32,
    145317129 as libc::c_int as u32,
    150160041 as libc::c_int as u32,
    155123009 as libc::c_int as u32,
    160208001 as libc::c_int as u32,
    165417001 as libc::c_int as u32,
    170752009 as libc::c_int as u32,
    176215041 as libc::c_int as u32,
    181808129 as libc::c_int as u32,
    187533321 as libc::c_int as u32,
    193392681 as libc::c_int as u32,
    199388289 as libc::c_int as u32,
    205522241 as libc::c_int as u32,
    211796649 as libc::c_int as u32,
    218213641 as libc::c_int as u32,
    224775361 as libc::c_int as u32,
    231483969 as libc::c_int as u32,
    238341641 as libc::c_int as u32,
    245350569 as libc::c_int as u32,
    252512961 as libc::c_int as u32,
    259831041 as libc::c_int as u32,
    267307049 as libc::c_int as u32,
    274943241 as libc::c_int as u32,
    282741889 as libc::c_int as u32,
    290705281 as libc::c_int as u32,
    298835721 as libc::c_int as u32,
    307135529 as libc::c_int as u32,
    315607041 as libc::c_int as u32,
    324252609 as libc::c_int as u32,
    333074601 as libc::c_int as u32,
    342075401 as libc::c_int as u32,
    351257409 as libc::c_int as u32,
    360623041 as libc::c_int as u32,
    370174729 as libc::c_int as u32,
    379914921 as libc::c_int as u32,
    389846081 as libc::c_int as u32,
    399970689 as libc::c_int as u32,
    410291241 as libc::c_int as u32,
    420810249 as libc::c_int as u32,
    431530241 as libc::c_int as u32,
    442453761 as libc::c_int as u32,
    453583369 as libc::c_int as u32,
    464921641 as libc::c_int as u32,
    476471169 as libc::c_int as u32,
    488234561 as libc::c_int as u32,
    500214441 as libc::c_int as u32,
    512413449 as libc::c_int as u32,
    524834241 as libc::c_int as u32,
    537479489 as libc::c_int as u32,
    550351881 as libc::c_int as u32,
    563454121 as libc::c_int as u32,
    576788929 as libc::c_int as u32,
    590359041 as libc::c_int as u32,
    604167209 as libc::c_int as u32,
    618216201 as libc::c_int as u32,
    632508801 as libc::c_int as u32,
    1683 as libc::c_int as u32,
    3653 as libc::c_int as u32,
    7183 as libc::c_int as u32,
    13073 as libc::c_int as u32,
    22363 as libc::c_int as u32,
    36365 as libc::c_int as u32,
    56695 as libc::c_int as u32,
    85305 as libc::c_int as u32,
    124515 as libc::c_int as u32,
    177045 as libc::c_int as u32,
    246047 as libc::c_int as u32,
    335137 as libc::c_int as u32,
    448427 as libc::c_int as u32,
    590557 as libc::c_int as u32,
    766727 as libc::c_int as u32,
    982729 as libc::c_int as u32,
    1244979 as libc::c_int as u32,
    1560549 as libc::c_int as u32,
    1937199 as libc::c_int as u32,
    2383409 as libc::c_int as u32,
    2908411 as libc::c_int as u32,
    3522221 as libc::c_int as u32,
    4235671 as libc::c_int as u32,
    5060441 as libc::c_int as u32,
    6009091 as libc::c_int as u32,
    7095093 as libc::c_int as u32,
    8332863 as libc::c_int as u32,
    9737793 as libc::c_int as u32,
    11326283 as libc::c_int as u32,
    13115773 as libc::c_int as u32,
    15124775 as libc::c_int as u32,
    17372905 as libc::c_int as u32,
    19880915 as libc::c_int as u32,
    22670725 as libc::c_int as u32,
    25765455 as libc::c_int as u32,
    29189457 as libc::c_int as u32,
    32968347 as libc::c_int as u32,
    37129037 as libc::c_int as u32,
    41699767 as libc::c_int as u32,
    46710137 as libc::c_int as u32,
    52191139 as libc::c_int as u32,
    58175189 as libc::c_int as u32,
    64696159 as libc::c_int as u32,
    71789409 as libc::c_int as u32,
    79491819 as libc::c_int as u32,
    87841821 as libc::c_int as u32,
    96879431 as libc::c_int as u32,
    106646281 as libc::c_int as u32,
    117185651 as libc::c_int as u32,
    128542501 as libc::c_int as u32,
    140763503 as libc::c_int as u32,
    153897073 as libc::c_int as u32,
    167993403 as libc::c_int as u32,
    183104493 as libc::c_int as u32,
    199284183 as libc::c_int as u32,
    216588185 as libc::c_int as u32,
    235074115 as libc::c_int as u32,
    254801525 as libc::c_int as u32,
    275831935 as libc::c_int as u32,
    298228865 as libc::c_int as u32,
    322057867 as libc::c_int as u32,
    347386557 as libc::c_int as u32,
    374284647 as libc::c_int as u32,
    402823977 as libc::c_int as u32,
    433078547 as libc::c_int as u32,
    465124549 as libc::c_int as u32,
    499040399 as libc::c_int as u32,
    534906769 as libc::c_int as u32,
    572806619 as libc::c_int as u32,
    612825229 as libc::c_int as u32,
    655050231 as libc::c_int as u32,
    699571641 as libc::c_int as u32,
    746481891 as libc::c_int as u32,
    795875861 as libc::c_int as u32,
    847850911 as libc::c_int as u32,
    902506913 as libc::c_int as u32,
    959946283 as libc::c_int as u32,
    1020274013 as libc::c_int as u32,
    1083597703 as libc::c_int as u32,
    1150027593 as libc::c_int as u32,
    1219676595 as libc::c_int as u32,
    1292660325 as libc::c_int as u32,
    1369097135 as libc::c_int as u32,
    1449108145 as libc::c_int as u32,
    1532817275 as libc::c_int as u32,
    1620351277 as libc::c_int as u32,
    1711839767 as libc::c_int as u32,
    1807415257 as libc::c_int as u32,
    1907213187 as libc::c_int as u32,
    2011371957 as libc::c_int as u32,
    2120032959 as libc::c_int as u32,
    8989 as libc::c_int as u32,
    19825 as libc::c_int as u32,
    40081 as libc::c_int as u32,
    75517 as libc::c_int as u32,
    134245 as libc::c_int as u32,
    227305 as libc::c_int as u32,
    369305 as libc::c_int as u32,
    579125 as libc::c_int as u32,
    880685 as libc::c_int as u32,
    1303777 as libc::c_int as u32,
    1884961 as libc::c_int as u32,
    2668525 as libc::c_int as u32,
    3707509 as libc::c_int as u32,
    5064793 as libc::c_int as u32,
    6814249 as libc::c_int as u32,
    9041957 as libc::c_int as u32,
    11847485 as libc::c_int as u32,
    15345233 as libc::c_int as u32,
    19665841 as libc::c_int as u32,
    24957661 as libc::c_int as u32,
    31388293 as libc::c_int as u32,
    39146185 as libc::c_int as u32,
    48442297 as libc::c_int as u32,
    59511829 as libc::c_int as u32,
    72616013 as libc::c_int as u32,
    88043969 as libc::c_int as u32,
    106114625 as libc::c_int as u32,
    127178701 as libc::c_int as u32,
    151620757 as libc::c_int as u32,
    179861305 as libc::c_int as u32,
    212358985 as libc::c_int as u32,
    249612805 as libc::c_int as u32,
    292164445 as libc::c_int as u32,
    340600625 as libc::c_int as u32,
    395555537 as libc::c_int as u32,
    457713341 as libc::c_int as u32,
    527810725 as libc::c_int as u32,
    606639529 as libc::c_int as u32,
    695049433 as libc::c_int as u32,
    793950709 as libc::c_int as u32,
    904317037 as libc::c_int as u32,
    1027188385 as libc::c_int as u32,
    1163673953 as libc::c_int as u32,
    1314955181 as libc::c_int as u32,
    1482288821 as libc::c_int as u32,
    1667010073 as libc::c_int as u32,
    1870535785 as libc::c_int as u32,
    2094367717 as libc::c_int as u32,
    48639 as libc::c_int as u32,
    108545 as libc::c_int as u32,
    224143 as libc::c_int as u32,
    433905 as libc::c_int as u32,
    795455 as libc::c_int as u32,
    1392065 as libc::c_int as u32,
    2340495 as libc::c_int as u32,
    3800305 as libc::c_int as u32,
    5984767 as libc::c_int as u32,
    9173505 as libc::c_int as u32,
    13726991 as libc::c_int as u32,
    20103025 as libc::c_int as u32,
    28875327 as libc::c_int as u32,
    40754369 as libc::c_int as u32,
    56610575 as libc::c_int as u32,
    77500017 as libc::c_int as u32,
    104692735 as libc::c_int as u32,
    139703809 as libc::c_int as u32,
    184327311 as libc::c_int as u32,
    240673265 as libc::c_int as u32,
    311207743 as libc::c_int as u32,
    398796225 as libc::c_int as u32,
    506750351 as libc::c_int as u32,
    638878193 as libc::c_int as u32,
    799538175 as libc::c_int as u32,
    993696769 as libc::c_int as u32,
    1226990095 as libc::c_int as u32,
    1505789553 as libc::c_int as u32,
    1837271615 as libc::c_int as u32,
    2229491905 as libc::c_uint,
    265729 as libc::c_int as u32,
    598417 as libc::c_int as u32,
    1256465 as libc::c_int as u32,
    2485825 as libc::c_int as u32,
    4673345 as libc::c_int as u32,
    8405905 as libc::c_int as u32,
    14546705 as libc::c_int as u32,
    24331777 as libc::c_int as u32,
    39490049 as libc::c_int as u32,
    62390545 as libc::c_int as u32,
    96220561 as libc::c_int as u32,
    145198913 as libc::c_int as u32,
    214828609 as libc::c_int as u32,
    312193553 as libc::c_int as u32,
    446304145 as libc::c_int as u32,
    628496897 as libc::c_int as u32,
    872893441 as libc::c_int as u32,
    1196924561 as libc::c_int as u32,
    1621925137 as libc::c_int as u32,
    2173806145 as libc::c_uint,
    1462563 as libc::c_int as u32,
    3317445 as libc::c_int as u32,
    7059735 as libc::c_int as u32,
    14218905 as libc::c_int as u32,
    27298155 as libc::c_int as u32,
    50250765 as libc::c_int as u32,
    89129247 as libc::c_int as u32,
    152951073 as libc::c_int as u32,
    254831667 as libc::c_int as u32,
    413442773 as libc::c_int as u32,
    654862247 as libc::c_int as u32,
    1014889769 as libc::c_int as u32,
    1541911931 as libc::c_int as u32,
    2300409629 as libc::c_uint,
    3375210671 as libc::c_uint,
    8097453 as libc::c_int as u32,
    18474633 as libc::c_int as u32,
    39753273 as libc::c_int as u32,
    81270333 as libc::c_int as u32,
    158819253 as libc::c_int as u32,
    298199265 as libc::c_int as u32,
    540279585 as libc::c_int as u32,
    948062325 as libc::c_int as u32,
    1616336765 as libc::c_int as u32,
    45046719 as libc::c_int as u32,
    103274625 as libc::c_int as u32,
    224298231 as libc::c_int as u32,
    464387817 as libc::c_int as u32,
    921406335 as libc::c_int as u32,
    1759885185 as libc::c_int as u32,
    3248227095 as libc::c_uint,
    251595969 as libc::c_int as u32,
    579168825 as libc::c_int as u32,
    1267854873 as libc::c_int as u32,
    2653649025 as libc::c_uint,
    1409933619 as libc::c_int as u32,
];
#[c2rust::src_loc = "421:33"]
static mut CELT_PVQ_U_ROW: [*const u32; 15] = [0 as *const u32; 15];
#[c2rust::src_loc = "440:1"]
unsafe extern "C" fn icwrs(mut _n: libc::c_int, mut _y: *const libc::c_int) -> u32 {
    let mut i: u32 = 0;
    let mut j: libc::c_int = 0;
    let mut k: libc::c_int = 0;
    if !(_n >= 2 as libc::c_int) {
        celt_fatal(
            b"assertion failed: _n>=2\0" as *const u8 as *const libc::c_char,
            b"celt/cwrs.c\0" as *const u8 as *const libc::c_char,
            444 as libc::c_int,
        );
    }
    j = _n - 1 as libc::c_int;
    i = (*_y.offset(j as isize) < 0 as libc::c_int) as libc::c_int as u32;
    k = abs(*_y.offset(j as isize));
    loop {
        j -= 1;
        i = (i as libc::c_uint).wrapping_add(
            *(CELT_PVQ_U_ROW[(if _n - j < k { _n - j } else { k }) as usize])
                .offset((if _n - j > k { _n - j } else { k }) as isize),
        ) as u32 as u32;
        k += abs(*_y.offset(j as isize));
        if *_y.offset(j as isize) < 0 as libc::c_int {
            i = (i as libc::c_uint).wrapping_add(
                *(CELT_PVQ_U_ROW[(if _n - j < k + 1 as libc::c_int {
                    _n - j
                } else {
                    k + 1 as libc::c_int
                }) as usize])
                    .offset(
                        (if _n - j > k + 1 as libc::c_int {
                            _n - j
                        } else {
                            k + 1 as libc::c_int
                        }) as isize,
                    ),
            ) as u32 as u32;
        }
        if !(j > 0 as libc::c_int) {
            break;
        }
    }
    return i;
}
#[no_mangle]
#[c2rust::src_loc = "458:1"]
pub unsafe extern "C" fn encode_pulses(
    mut _y: *const libc::c_int,
    mut _n: libc::c_int,
    mut _k: libc::c_int,
    mut _enc: *mut ec_enc,
) {
    if !(_k > 0 as libc::c_int) {
        celt_fatal(
            b"assertion failed: _k>0\0" as *const u8 as *const libc::c_char,
            b"celt/cwrs.c\0" as *const u8 as *const libc::c_char,
            459 as libc::c_int,
        );
    }
    ec_enc_uint(
        _enc,
        icwrs(_n, _y),
        (*(CELT_PVQ_U_ROW[(if _n < _k { _n } else { _k }) as usize])
            .offset((if _n > _k { _n } else { _k }) as isize))
        .wrapping_add(
            *(CELT_PVQ_U_ROW[(if _n < _k + 1 as libc::c_int {
                _n
            } else {
                _k + 1 as libc::c_int
            }) as usize])
                .offset(
                    (if _n > _k + 1 as libc::c_int {
                        _n
                    } else {
                        _k + 1 as libc::c_int
                    }) as isize,
                ),
        ),
    );
}
#[c2rust::src_loc = "463:1"]
unsafe extern "C" fn cwrsi(
    mut _n: libc::c_int,
    mut _k: libc::c_int,
    mut _i: u32,
    mut _y: *mut libc::c_int,
) -> opus_val32 {
    let mut p: u32 = 0;
    let mut s: libc::c_int = 0;
    let mut k0: libc::c_int = 0;
    let mut val: i16 = 0;
    let mut yy: opus_val32 = 0 as libc::c_int as opus_val32;
    if !(_k > 0 as libc::c_int) {
        celt_fatal(
            b"assertion failed: _k>0\0" as *const u8 as *const libc::c_char,
            b"celt/cwrs.c\0" as *const u8 as *const libc::c_char,
            469 as libc::c_int,
        );
    }
    if !(_n > 1 as libc::c_int) {
        celt_fatal(
            b"assertion failed: _n>1\0" as *const u8 as *const libc::c_char,
            b"celt/cwrs.c\0" as *const u8 as *const libc::c_char,
            470 as libc::c_int,
        );
    }
    while _n > 2 as libc::c_int {
        let mut q: u32 = 0;
        if _k >= _n {
            let mut row: *const u32 = 0 as *const u32;
            row = CELT_PVQ_U_ROW[_n as usize];
            p = *row.offset((_k + 1 as libc::c_int) as isize);
            s = -((_i >= p) as libc::c_int);
            _i = (_i as libc::c_uint).wrapping_sub(p & s as libc::c_uint) as u32 as u32;
            k0 = _k;
            q = *row.offset(_n as isize);
            if q > _i {
                _k = _n;
                loop {
                    _k -= 1;
                    p = *(CELT_PVQ_U_ROW[_k as usize]).offset(_n as isize);
                    if !(p > _i) {
                        break;
                    }
                }
            } else {
                p = *row.offset(_k as isize);
                while p > _i {
                    _k -= 1;
                    p = *row.offset(_k as isize);
                }
            }
            _i = (_i as libc::c_uint).wrapping_sub(p) as u32 as u32;
            val = (k0 - _k + s ^ s) as i16;
            let fresh0 = _y;
            _y = _y.offset(1);
            *fresh0 = val as libc::c_int;
            yy = yy + val as opus_val32 * val as opus_val32;
        } else {
            p = *(CELT_PVQ_U_ROW[_k as usize]).offset(_n as isize);
            q = *(CELT_PVQ_U_ROW[(_k + 1 as libc::c_int) as usize]).offset(_n as isize);
            if p <= _i && _i < q {
                _i = (_i as libc::c_uint).wrapping_sub(p) as u32 as u32;
                let fresh1 = _y;
                _y = _y.offset(1);
                *fresh1 = 0 as libc::c_int;
            } else {
                s = -((_i >= q) as libc::c_int);
                _i = (_i as libc::c_uint).wrapping_sub(q & s as libc::c_uint) as u32 as u32;
                k0 = _k;
                loop {
                    _k -= 1;
                    p = *(CELT_PVQ_U_ROW[_k as usize]).offset(_n as isize);
                    if !(p > _i) {
                        break;
                    }
                }
                _i = (_i as libc::c_uint).wrapping_sub(p) as u32 as u32;
                val = (k0 - _k + s ^ s) as i16;
                let fresh2 = _y;
                _y = _y.offset(1);
                *fresh2 = val as libc::c_int;
                yy = yy + val as opus_val32 * val as opus_val32;
            }
        }
        _n -= 1;
    }
    p = (2 as libc::c_int * _k + 1 as libc::c_int) as u32;
    s = -((_i >= p) as libc::c_int);
    _i = (_i as libc::c_uint).wrapping_sub(p & s as libc::c_uint) as u32 as u32;
    k0 = _k;
    _k = (_i.wrapping_add(1 as libc::c_int as libc::c_uint) >> 1 as libc::c_int) as libc::c_int;
    if _k != 0 {
        _i = (_i as libc::c_uint)
            .wrapping_sub((2 as libc::c_int * _k - 1 as libc::c_int) as libc::c_uint)
            as u32 as u32;
    }
    val = (k0 - _k + s ^ s) as i16;
    let fresh3 = _y;
    _y = _y.offset(1);
    *fresh3 = val as libc::c_int;
    yy = yy + val as opus_val32 * val as opus_val32;
    s = -(_i as libc::c_int);
    val = (_k + s ^ s) as i16;
    *_y = val as libc::c_int;
    yy = yy + val as opus_val32 * val as opus_val32;
    return yy;
}
#[no_mangle]
#[c2rust::src_loc = "539:1"]
pub unsafe extern "C" fn decode_pulses(
    mut _y: *mut libc::c_int,
    mut _n: libc::c_int,
    mut _k: libc::c_int,
    mut _dec: *mut ec_dec,
) -> opus_val32 {
    return cwrsi(
        _n,
        _k,
        ec_dec_uint(
            _dec,
            (*(CELT_PVQ_U_ROW[(if _n < _k { _n } else { _k }) as usize])
                .offset((if _n > _k { _n } else { _k }) as isize))
            .wrapping_add(
                *(CELT_PVQ_U_ROW[(if _n < _k + 1 as libc::c_int {
                    _n
                } else {
                    _k + 1 as libc::c_int
                }) as usize])
                    .offset(
                        (if _n > _k + 1 as libc::c_int {
                            _n
                        } else {
                            _k + 1 as libc::c_int
                        }) as isize,
                    ),
            ),
        ),
        _y,
    );
}
unsafe extern "C" fn run_static_initializers() {
    CELT_PVQ_U_ROW = [
        CELT_PVQ_U_DATA.as_ptr().offset(0 as libc::c_int as isize),
        CELT_PVQ_U_DATA.as_ptr().offset(176 as libc::c_int as isize),
        CELT_PVQ_U_DATA.as_ptr().offset(351 as libc::c_int as isize),
        CELT_PVQ_U_DATA.as_ptr().offset(525 as libc::c_int as isize),
        CELT_PVQ_U_DATA.as_ptr().offset(698 as libc::c_int as isize),
        CELT_PVQ_U_DATA.as_ptr().offset(870 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1041 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1131 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1178 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1207 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1226 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1240 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1248 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1254 as libc::c_int as isize),
        CELT_PVQ_U_DATA
            .as_ptr()
            .offset(1257 as libc::c_int as isize),
    ];
}
#[used]
#[cfg_attr(target_os = "linux", link_section = ".init_array")]
#[cfg_attr(target_os = "windows", link_section = ".CRT$XIB")]
#[cfg_attr(target_os = "macos", link_section = "__DATA,__mod_init_func")]
static INIT_ARRAY: [unsafe extern "C" fn(); 1] = [run_static_initializers];
